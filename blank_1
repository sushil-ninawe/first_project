Certainly! You can achieve the equivalent using pandas operations. Assuming you have two DataFrames named `emp_df` and `terminated_emp_df`, you can use the `merge` function to perform the equivalent of the SQL query. Here's an example:

```python
import pandas as pd

# Assuming you have DataFrames emp_df and terminated_emp_df
result_df = emp_df.merge(terminated_emp_df[['emp_id']], on='emp_id', how='left', indicator=True)
filtered_df = result_df[result_df['_merge'] == 'left_only'].drop(columns=['_merge'])

# Now filtered_df contains the result you're looking for
```

This code snippet merges the two DataFrames on the 'emp_id' column, includes an indicator column '_merge' to identify the source of each row, and then filters only the rows where the indicator is 'left_only', indicating that the 'emp_id' is not in the 'terminated_emp_df'.